program ::= statement+

statement ::= INTEGER command NEWLINE 

command ::= LET variable '=' expr
        | READ varlist
        | DATA numlist
        | PRINT plist? (','|';')?
        | GOTO INTEGER
        | IF relexpr THEN INTEGER
        | FOR ID '=' expr TO expr (| STEP expr)?
        | NEXT ID
        | END
        | REM
        | DEF ID '(' ID ')' '=' expr
        | GOSUB INTEGER
        | RETURN
        | DIM dimlist

dimlist ::= dimlist ',' dimitem
        | dimitem
        

dimitem ::= ID '(' INTEGER ')'
        | ID '(' INTEGER ',' INTEGER ')'

expr ::=  expr '+' expr
        | expr '-' expr
        | expr '*' expr
        | expr '/' expr
        | expr '^' expr
        | INTEGER
        | FLOAT
        | variable
        | '(' expr ')'
        | '-' expr

relexpr ::= expr '<' expr
        | expr '<=' expr
        | expr '>' expr
        | expr '>=' expr
        | expr '=' expr
        | expr '<>' expr

variable ::= ID 
        | ID '(' expr ')'
        | ID '(' expr ',' expr ')'

varlist ::= varlist ',' variable
        | variable

numlist ::= numlist ',' number
        | number


number ::= INTEGER | FLOAT
        | '-' (INTEGER | FLOAT)

plist ::= plist ',' pitem
        | pitem

pitem ::= STRING expr
        | expr

